{"version":3,"file":"static/js/38.bd709fda.chunk.js","mappings":"gLACA,EAAwB,qBAAxB,EAAqD,qB,kBC0CrD,EAtCc,SAAC,GAQR,IAPLA,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,SACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,eACAC,EACI,EADJA,WAEMC,GAAqBC,EAAAA,EAAAA,MAC3B,OACE,mBAAOC,UAAWC,EAAWC,QAASJ,EAAtC,UACGP,GACD,kBACES,UAAWC,EACXT,KAAMA,EACNW,KAAMV,EACNW,QAASV,EACTC,MAAOA,EACPU,UAAQ,EACRC,SAAUV,EACVW,MAAOV,EACPW,GAAIV,MAIX,C,uGC9BD,EAA4B,4BAA5B,EAA+D,uBAA/D,EAAyI,yB,SCwGzI,EAnGiB,SAAC,GAAoB,IAAlBW,EAAiB,EAAjBA,WAClB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MA8BXC,EAAe,SAACT,EAAYN,EAAMS,EAAOO,GAC1B,aAAfV,EAnBkB,SAACN,EAAMS,EAAOO,GACpC,GAAIA,EAAKC,OAAS,EAChBC,MAAM,mDACD,CACL,IAAIC,EAAc,CAChBnB,KAAK,GAAD,OAAKA,GACTS,MAAM,GAAD,OAAKA,GACVE,SAAS,GAAD,OAAKK,IAEfH,EAASO,EAAAA,EAAAA,SAAgBD,GAC1B,CACF,CASGE,CAAgBrB,EAAMS,EAAOO,GAPT,SAACP,EAAOO,GAC9B,IAAMG,EAAc,CAAEV,MAAOA,EAAOE,SAAUK,GAC9CH,EAASO,EAAAA,EAAAA,MAAaD,GACvB,CAMGG,CAAgBb,EAAOO,EAE1B,EAEKO,EAAmB,SAAAC,GACvB,MAAwBA,EAAEC,OAAlBzB,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MACD,UAATJ,EACFU,EAASN,GACS,SAATJ,EACTQ,EAAQJ,GAERQ,EAAYR,EAEf,EAED,OACE,+BACE,kBACEsB,SAAU,SAAAC,GACRA,EAAMC,iBACNb,EAAaT,EAAYN,EAAMS,EAAOE,GApD5B,SAAAL,GACG,aAAfA,GACFE,EAAQ,IACRE,EAAS,IACTE,EAAY,MAEZF,EAAS,IACTE,EAAY,IAEf,CA4COiB,EACD,EACDhC,UAAWC,EAAgBA,EAN7B,UAQkB,aAAfQ,IACC,SAACwB,EAAA,EAAD,CACE1C,MAAM,WACNC,KAAK,OACLC,SAAS,OACTE,MAAM,8BACNU,UAAQ,EACRT,eAAgB8B,EAChB7B,WAAYM,KAGhB,SAAC8B,EAAA,EAAD,CACE1C,MAAM,QACNC,KAAK,QACLC,SAAS,QACTE,MAAM,yDACNU,UAAQ,EACRT,eAAgB8B,EAChB7B,WAAYe,KAEd,SAACqB,EAAA,EAAD,CACE1C,MAAM,WACNC,KAAK,WACLC,SAAS,WACTE,MAAM,iCACNU,UAAQ,EACRT,eAAgB8B,EAChB7B,WAAYiB,KAEd,mBAAQtB,KAAK,SAASQ,UAAWC,EAAjC,SACkB,aAAfQ,EAA4BA,EAAa,eAKnD,C,iEC1FD,UAVc,WACZ,OACE,gBAAKT,UAAWC,EAAAA,EAAAA,WAAhB,UACE,gBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,UACE,SAAC,IAAD,CAAUQ,WAAY,aAI7B,C","sources":["webpack://react-homework-template/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://react-homework-template/./src/components/UserForm/UserForm.module.css?24f4","components/UserForm/UserForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"input\":\"Input_input__E5rzA\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Input.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst Input = ({\n  label,\n  type,\n  dataName,\n  validation,\n  title,\n  functionChange,\n  stateField,\n}) => {\n  const idForLabelAndInput = nanoid();\n  return (\n    <label className={css.label} htmlFor={idForLabelAndInput}>\n      {label}\n      <input\n        className={css.input}\n        type={type}\n        name={dataName}\n        pattern={validation}\n        title={title}\n        required\n        onChange={functionChange}\n        value={stateField}\n        id={idForLabelAndInput}\n      />\n    </label>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  dataName: PropTypes.string.isRequired,\n  validation: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  functionChange: PropTypes.func.isRequired,\n  stateField: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserForm_container__Wfyic\",\"form\":\"UserForm_form__Rtz4A\",\"form_label\":\"UserForm_form_label__4G-g4\",\"button\":\"UserForm_button__pDShj\"};","import React, { useState } from 'react';\nimport Input from '../Input/Input';\nimport { useDispatch } from 'react-redux';\nimport opAuth from '../../redux/auth/opAuth';\nimport css from './UserForm.module.css';\n\nconst UserForm = ({ typeOfForm }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const formReset = typeOfForm => {\n    if (typeOfForm === 'Register') {\n      setName('');\n      setEmail('');\n      setPassword('');\n    } else {\n      setEmail('');\n      setPassword('');\n    }\n  };\n  const handleSubmitReg = (name, email, pass) => {\n    if (pass.length < 6) {\n      alert('Password must be at least 7 characters long');\n    } else {\n      let credentials = {\n        name: `${name}`,\n        email: `${email}`,\n        password: `${pass}`,\n      };\n      dispatch(opAuth.register(credentials));\n    }\n  };\n\n  const handleSubmitLog = (email, pass) => {\n    const credentials = { email: email, password: pass };\n    dispatch(opAuth.logIn(credentials));\n  };\n\n  const handleSubmit = (typeOfForm, name, email, pass) => {\n    if (typeOfForm === 'Register') {\n      handleSubmitReg(name, email, pass);\n    } else {\n      handleSubmitLog(email, pass);\n    }\n  };\n\n  const handleChangeUser = e => {\n    const { name, value } = e.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'name') {\n      setName(value);\n    } else {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={event => {\n          event.preventDefault();\n          handleSubmit(typeOfForm, name, email, password);\n          formReset();\n        }}\n        className={css.container + css.form}\n      >\n        {typeOfForm === 'Register' && (\n          <Input\n            label=\"Username\"\n            type=\"text\"\n            dataName=\"name\"\n            title=\"Your username for this site\"\n            required\n            functionChange={handleChangeUser}\n            stateField={name}\n          />\n        )}\n        <Input\n          label=\"Email\"\n          type=\"email\"\n          dataName=\"email\"\n          title=\"Must contain @ and the site, e.g. john.doe@example.com\"\n          required\n          functionChange={handleChangeUser}\n          stateField={email}\n        />\n        <Input\n          label=\"Password\"\n          type=\"password\"\n          dataName=\"password\"\n          title=\"Make sure to remember it well.\"\n          required\n          functionChange={handleChangeUser}\n          stateField={password}\n        />\n        <button type=\"submit\" className={css.button}>\n          {typeOfForm === 'Register' ? typeOfForm : 'Log In'}\n        </button>\n      </form>\n    </>\n  );\n};\nexport default UserForm;\n","import React from 'react';\nimport UserForm from '../components/UserForm/UserForm';\nimport css from './Pages.module.css';\n\nconst Login = () => {\n  return (\n    <div className={css.background}>\n      <div className={css.container}>\n        <UserForm typeOfForm={'Login'}></UserForm>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["label","type","dataName","validation","title","functionChange","stateField","idForLabelAndInput","nanoid","className","css","htmlFor","name","pattern","required","onChange","value","id","typeOfForm","useState","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleSubmit","pass","length","alert","credentials","opAuth","handleSubmitReg","handleSubmitLog","handleChangeUser","e","target","onSubmit","event","preventDefault","formReset","Input"],"sourceRoot":""}